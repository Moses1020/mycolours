{"version":3,"sources":["webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/messages/messages.module.ts","webpack:///./src/app/messages/messages.routing.ts"],"names":[],"mappings":"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","file":"messages-messages-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"card col-md-8\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8\\\">\\n          <p class=\\\"na-p\\\"> messages works! </p>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n          <!-- <button class=\\\"btn-link\\\" (click)=\\\"newMsg()\\\">New Message</button> -->\\n            <a style=\\\"cursor: pointer\\\" (click)=\\\"newMsg()\\\"> New messege</a>\\n\\n        </div>\\n        \\n      </div>\\n      <div class=\\\"row\\\">\\n\\n        <!-- <div class=\\\"col-md-12\\\">\\n          <ng-container *ngIf=\\\"chat$ | async as chat\\\">\\n\\n            <div class=\\\"top\\\">\\n              <p>\\n                  https://firestore-megachat.firebaseapp.com/chats/{{ chat.id }}\\n              </p>\\n            </div>\\n\\n\\n            <div class=\\\"chat\\\">\\n\\n\\n              <div class=\\\"msg\\\" *ngFor=\\\"let msg of chat.messages; trackBy: trackByCreated\\\">\\n\\n                <div class=\\\"user\\\">\\n                  <img [src]=\\\"msg.user?.photoURL\\\">\\n                  <div>{{ msg.user?.displayName }}</div>\\n                </div>\\n\\n                <p>{{ msg.content }}</p>\\n\\n              </div>\\n\\n            </div>\\n\\n            <div class=\\\"form\\\">\\n              <input [(ngModel)]=\\\"newMsg\\\" (keydown.enter)=\\\"submit(chat.id)\\\">\\n\\n              <button (click)=\\\"submit(chat.id)\\\">Send</button>\\n            </div>\\n\\n          </ng-container>\\n        </div> -->\\n        <div class=\\\"col-md-3\\\">\\n          <span *ngFor=\\\"let man of colGroup\\\">\\n            <a style=\\\"cursor: pointer\\\" (click)=\\\"viewChat(man)\\\">{{ man.name }}</a><br>\\n          </span>\\n        </div>\\n        <div *ngIf=\\\"createMsg\\\"  class=\\\"col-md-9 ml-auto mr-auto\\\">\\n          New messege\\n        </div>\\n        <div *ngIf=\\\"readMsg\\\"  class=\\\"col-md-9 ml-auto mr-auto\\\">\\n          <div class=\\\"card\\\"> \\n            {{ colMan.name }}\\n            <div class=\\\"col-md-11\\\">\\n              <!-- <span class=\\\"card\\\" *ngFor=\\\"let msg of myChat\\\"> -->\\n              <span class=\\\"card\\\" *ngFor=\\\"let msg of myChats | async\\\">\\n                <a style=\\\"cursor: pointer\\\" (click)=\\\"viewChat(man)\\\">{{ msg.content }}</a><br>\\n              </span>\\n            </div>\\n            <!-- <p ng-class=\\\"chat.userId == userId ? 'text-info' : (chat.userId != userId ? 'text-success')\\\">Read msg Read msg Read msg Read msg Read msg Read msg Read msg Read msg</p> -->\\n            <div class=\\\"col-md-11 card-footer\\\" style=\\\"padding-right: 0px; padding-left: 25px;\\\">\\n              <code>new messege</code>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"input-group\\\" [ngClass]=\\\"{'input-group-focus':focus===true}\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control panel-boader\\\" [(ngModel)]=\\\"msgText\\\" style=\\\" padding-left: 10px; padding-right: 10px; height:2em\\\"\\n                    placeholder=\\\"new messege\\\" /><!-- clrs-cell  -->\\n                  <div class=\\\"input-group-postpend\\\">\\n                    <span class=\\\"input-group-text\\\" style=\\\" padding-left: 10px; padding-right: 10px; height:28px\\\">\\n                      <small>\\n                        <button class=\\\"text-info btn-link \\\" (click)=\\\"submitMsg(msgText)\\\" title=\\\"Send messege\\\" style=\\\"padding-top: 0px; padding-bottom: 0px; cursor: pointer;\\\">\\n                           <i class=\\\"nc-icon nc-send\\\"></i>\\n                        </button>\\n                      </small>\\n                    </span>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"readRequests\\\" class=\\\"card col-md-4\\\">\\n      <p>\\n        Projects and Company Requests !\\n      </p>\\n      <!-- <div class=\\\"footer\\\">\\n          <button class=\\\"btn-link\\\" (click)=\\\"viewRequest()\\\">Back</button>\\n      </div> -->\\n    </div>\\n    <!-- <div *ngIf=\\\"createMsg\\\" class=\\\"card col-md-4\\\">\\n      <p>\\n        New Message !\\n      </p>\\n      <div class=\\\"footer\\\">\\n          <button class=\\\"btn-link\\\" (click)=\\\"return()\\\">Back</button>\\n      </div>\\n    </div> -->\\n    <!-- <div *ngIf=\\\"readMsg\\\" class=\\\"card col-md-6\\\">\\n      <p>\\n        Projects and Company Requests !\\n      </p>\\n      <div class=\\\"footer\\\">\\n          <button class=\\\"btn-link\\\" (click)=\\\"viewRequest()\\\">Back</button>\\n      </div>\\n    </div> -->\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'app/services/auth.service';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { Router } from '@angular/router';\nimport { firestore } from 'firebase';\nimport { PersonalService } from 'app/services/personal.service';\nimport { Observable } from 'rxjs';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { ParticipantData } from 'app/models/enterprise-model';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\n\nexport class MessagesComponent implements OnInit {\n\n  public readRequests: boolean = true;\n  public readMsg: boolean = false;\n  createMsg: boolean;\n  msgText: any\n  colGroup: { id: string; name: string; }[];\n  colMan: { id: any; name: any; };\n  myChat = [];\n  // user$:firebase.User;\n  myContacts: Observable<ParticipantData[]>; \n  myChats: any;\n  user: any;\n  userId: string;\n\n  \n  // user$: any;\n  \n  constructor(public afAuth: AngularFireAuth,private auth: AuthService, private afs: AngularFirestore, private ps: PersonalService, private router: Router) { \n    // this.user = auth.getUser()\n  }\n\n  viewChat(man){\n    // this.readRequests = false;\n    // man.\n    this.colMan = man;\n    this.readMsg = true;\n    this.createMsg = false;\n  }\n\n  viewRequest() {\n    this.readRequests = true;\n    this.readMsg = false;\n  }\n\n  newMsg() {\n    // this.readRequests = false;\n    this.readMsg = false;\n    this.createMsg = true;\n  }\n\n  return(){\n    this.createMsg = false;\n    this.readRequests = true;\n    this.readMsg = false;\n  }\n\n  submitMsg(msg){\n    new msg.content\n    this.myChat.push(msg)\n  }\n\n  startChat(friendId){\n    const uid = this.auth.userId;\n    const chatId = uid + friendId;\n    const ref = this.afs.collection('Users').doc(uid).collection('chats').doc(chatId);\n  }\n\n  async sendMessage(chatId, content) {\n    // const { uid } = await this.auth.getUser();\n    const uid = await this.auth.userId;\n\n    const data = {\n      uid,\n      content,\n      createdAt: Date.now()\n    };\n\n    if (uid) {\n      const ref = this.afs.collection('Users').doc(uid).collection('chats').doc(chatId);\n      return ref.update({\n        messages: firestore.FieldValue.arrayUnion(data)\n      });\n    }\n  }\n\n  dataCall(){\n    this.myContacts = this.ps.getContacts(this.userId);\n    this.myChats = this.ps.getChats(this.userId);\n  }\n\n  ngOnInit() {\n    this.afAuth.user.subscribe(user => {\n      console.log(user);\n      this.userId = user.uid;\n      this.user = user;\n      console.log(this.userId);\n      console.log(this.user);\n      this.dataCall();\n    })\n    this.colGroup = [\n      { id: '1', name: 'Shallwin' },\n      { id: '2', name: 'Terence' },\n      { id: '3', name: 'Munya' },\n      { id: '4', name: 'Themba' },\n    ];\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { WorkRoutes } from './messages.routing';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { TagInputModule } from 'ngx-chips';\nimport { FileUploader, FileSelectDirective } from 'ng2-file-upload/ng2-file-upload';\nimport { MessagesComponent } from './messages.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(WorkRoutes),\n        FormsModule, NgSelectModule, TagInputModule\n    ],\n    declarations: [MessagesComponent]\n})\n\nexport class MessagesModule {}\n","import { Routes } from '@angular/router';\nimport { MessagesComponent } from './messages.component';\n\n\nexport const WorkRoutes: Routes = [{\n    path: '',\n    children: [{\n        path: 'messages',\n        component: MessagesComponent\n    }]\n}];\n"],"sourceRoot":""}